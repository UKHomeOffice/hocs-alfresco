<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn"
             xmlns:tns="http://www.activiti.org/test" targetNamespace="http://www.activiti.org/test">
    <collaboration id="FOI_Standard">
        <participant id="FOI" name="FOI Standard Workflow" processRef="foi_process"/>
    </collaboration>
    <process id="foi_process" processType="None" isClosed="false" isExecutable="true">
        <laneSet>
            <lane id="Lane_1uvq81a" name="FOI - Information Rights Team">
                <flowNodeRef>startevent1</flowNodeRef>
                <flowNodeRef>CreateCase</flowNodeRef>
                <flowNodeRef>CreateCaseGateway</flowNodeRef>
                <flowNodeRef>NRR</flowNodeRef>
                <flowNodeRef>OGD</flowNodeRef>
                <flowNodeRef>NRRGateway</flowNodeRef>
                <flowNodeRef>OGDGateway</flowNodeRef>
            </lane>
            <lane id="Lane_0rz4nkq" name="Private Office">
                <flowNodeRef>MinisterSignOff</flowNodeRef>
                <flowNodeRef>MinisterSignOffGateway</flowNodeRef>
            </lane>
            <lane id="Lane_18t2e9g" name="SPAD">
                <flowNodeRef>SpadsApproval</flowNodeRef>
                <flowNodeRef>SpadsApprovalGateway</flowNodeRef>
            </lane>
            <lane id="Lane_1ipf9vq" name="Press Office">
                <flowNodeRef>PressOfficeReview</flowNodeRef>
                <flowNodeRef>PressOfficeReviewGateway</flowNodeRef>
            </lane>
            <lane id="Lane_07xed15" name="One of many teams">
                <flowNodeRef>DraftResponse</flowNodeRef>
                <flowNodeRef>DraftResponseGateway</flowNodeRef>
                <flowNodeRef>QAReview</flowNodeRef>
                <flowNodeRef>QAReviewGateway</flowNodeRef>
                <flowNodeRef>SCSApproval</flowNodeRef>
                <flowNodeRef>SCSApprovalGateway</flowNodeRef>
                <flowNodeRef>Dispatch</flowNodeRef>
                <flowNodeRef>DispatchGateway</flowNodeRef>
                <flowNodeRef>endevent1</flowNodeRef>
            </lane>
        </laneSet>
        <startEvent id="startevent1" name="Start" activiti:formKey="wf:submitGroupReviewTask"/>
        <sequenceFlow id="start" sourceRef="startevent1" targetRef="CreateCase"/>
        <userTask id="CreateCase" name="Create Case" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                execution.setVariable('bpm_case_id', bpm_package.children[i].nodeRef);
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Create Case");
                                bpm_package.children[i].properties['cts:caseStatus'] = 'New';
                                bpm_package.children[i].properties['cts:caseTask'] = 'Create case';
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value":"Reallocate","manualAllocate":true,"allocateHeader":"Reallocate","colour":"green"},{"label":"Allocate for draft","value":"Next","manualAllocate":true,"allocateHeader":"Allocate for drafting","colour":"green"}],"mandatoryFields":[{"name":"channel","message":"Original channel in the Case details section must be populated"},{"name":"correspondentEmail","message":"Email address in the Requestor details must be populated","expression":"notBlank(case.correspondentEmail) or case.channel !== \'Email\'"},{"name":"correspondentAddressLine1","message":"Address in the Requestor details must be populated","expression":"notBlank(case.correspondentAddressLine1) or case.channel !== \'Post\'"},{"name":"correspondentPostcode","message":"Postcode in the Requestor details must be populated","expression":"notBlank(case.correspondentPostcode) or case.channel !== \'Post\'"},{"name":"correspondentSurname","message":"Last name in the Requestor details section must be populated"},{"name":"markupUnit","message":"Answering Unit in the Markup section must be populated","expression":"notBlank(case.markupUnit) or case.markupDecision === \'No reply needed\' or case.markupDecision ===\'Refer to DCU\'"},{"name":"markupTopic","message":"Topic in the markup section must be populated","expression":"notBlank(case.markupTopic) or case.markupDecision === \'No reply needed\' or case.markupDecision ===\'Refer to DCU\'"}]}';
                                bpm_package.children[i].save();
                                execution.setVariable('bpm_reject_initial_create_user', bpm_package.children[i].properties['cts:assignedUser']);
                                execution.setVariable('bpm_reject_initial_create_team', bpm_package.children[i].properties['cts:assignedTeam']);
                                execution.setVariable('bpm_reject_initial_create_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Create Case");
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                if (bpm_package.children[i].properties['cts:markupDecision'] == 'No reply needed') {
                                   logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: NRR");
                                   execution.setVariable('bpm_outcome', 'CreateCaseToNRR');
                                } else if (bpm_package.children[i].properties['cts:markupDecision'] == 'Refer to DCU' ||
                                   bpm_package.children[i].properties['cts:markupDecision'] == 'Request unclear') {
                                   logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: OGD");
                                   execution.setVariable('bpm_outcome', 'CreateCaseToOGD');
                                } else{
                                   logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Draft Response");
                                   execution.setVariable('bpm_outcome', 'SendCreateCaseForDraftResponse');
                                }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToCreateCaseGateway" sourceRef="CreateCase" targetRef="CreateCaseGateway"/>
        <exclusiveGateway id="CreateCaseGateway"/>
        <sequenceFlow id="SendCreateToOGD" sourceRef="CreateCaseGateway" targetRef="OGD">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'CreateCaseToOGD')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendCreateToNRR" sourceRef="CreateCaseGateway" targetRef="NRR">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'CreateCaseToNRR')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToDraftResponse" sourceRef="CreateCaseGateway" targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendCreateCaseForDraftResponse')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="DraftResponse" name="Draft Response" activiti:formKey="wf:activitiReviewTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Draft Response");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                logger.log("Draft node:" + bpm_package.children[i].nodeRef);
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                if (bpm_package.children[i].properties['cts:caseTask'] != 'Amend response') {
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Draft response';
                                }
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value":"Reallocate","manualAllocate":true,"allocateHeader":"Reallocate","colour":"green"},{"label":"Submit","value":"SendForQA","manualAllocate":true,"allocateHeader":"Allocate for QA review","colour":"green"},{"label":"Return","value":"Reject","manualAllocate":false,"allocateHeader":"Reject","colour":"red"}],"mandatoryFields":[{"name":"hoCaseOfficer","message":"HO case officer is required"},{"name":"answeringMinister","message":"Sign off Minister must be populated when ministerial sign off is required","expression":"notBlank(case.answeringMinister) or form.foiMinisterSignOff !== 1"},{"name":"pitLetterSentDate","message":"The date of the PIT extension letter must be populated","expression":"notBlank(case.pitLetterSentDate) or form.pitExtension !== 1"},{"name":"pitQualifiedExemptions","message":"An appropriate PIT exemption must be selected","expression":"notEmpty(case.pitQualifiedExemptions) or form.pitExtension !== 1"},{"name":"correspondentForename","message":"First name in the Requestor details on the create page must be populated"},{"name":"correspondentSurname","message":"Last name in the Requester details on the create page must be populated"},{"name":"document","message":"A document with a Response document type must be uploaded","expression":"case.hasCaseDocument(\'Response\') === true"},{"name":"exemptions","message":"Exemptions in the outcome section must be populated","expression":"notEmpty(case.exemptions) or case.markupDecision !== \'Information withheld in full\' and case.markupDecision !== \'Information released in part\'"}]}';
                                bpm_package.children[i].save();
                                execution.setVariable('bpm_reject_initial_draft_user', bpm_package.children[i].properties['cts:assignedUser']);
                                execution.setVariable('bpm_reject_initial_draft_team', bpm_package.children[i].properties['cts:assignedTeam']);
                                execution.setVariable('bpm_reject_initial_draft_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Draft Response");
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                if (task.getVariableLocal('cts_draftResponse') == 'Reject'){
                                    logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Create Case");
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_create_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_create_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_create_user');
                                    execution.setVariable('bpm_outcome', 'Return');
                                } else {
                                   logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: QA Review");
                                   execution.setVariable('bpm_outcome', 'SendInitialDraftForQaReview');
                                }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToDraftResponseGateway" sourceRef="DraftResponse" targetRef="DraftResponseGateway"/>
        <exclusiveGateway id="DraftResponseGateway"/>
        <sequenceFlow id="RejectDraftResponseToCreateCase" name="Reject" sourceRef="DraftResponseGateway"
                      targetRef="CreateCase">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToQAReview" sourceRef="DraftResponseGateway" targetRef="QAReview">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendInitialDraftForQaReview')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="QAReview" name="QA Review" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("Sending node to QA review");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                logger.log("Draft node:" + bpm_package.children[i].nodeRef);
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                bpm_package.children[i].properties['cts:caseTask'] = 'QA review';
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "SendForSCSApproval","manualAllocate": true,"allocateHeader": "Allocate for SCS approval","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Reallocate for drafter","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: QA Response");
                            var approved = (task.getVariableLocal('cts_draftResponse') == 'SendForSCSApproval');
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: SCS Approval");
                                execution.setVariable('bpm_outcome', 'SendForSCSApproval');
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Draft Response");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value":"Reallocate","manualAllocate":true,"allocateHeader":"Reallocate","colour":"green"},{"label":"Submit","value":"SendForQA","manualAllocate":true,"allocateHeader":"Allocate for QA review","colour":"green"},{"label":"Return","value":"Reject","manualAllocate":true,"allocateHeader":"Reject","colour":"red"}],"mandatoryFields":[{"name":"hoCaseOfficer","message":"HO case officer is required"},{"name":"answeringMinister","message":"Sign off Minister must be populated when ministerial sign off is required","expression":"notBlank(case.answeringMinister) or form.foiMinisterSignOff !== 1"},{"name":"pitLetterSentDate","message":"The date of the PIT extension letter must be populated","expression":"notBlank(case.pitLetterSentDate) or form.pitExtension !== 1"},{"name":"pitQualifiedExemptions","message":"An appropriate PIT exemption must be selected","expression":"notEmpty(case.pitQualifiedExemptions) or form.pitExtension !== 1"},{"name":"correspondentForename","message":"First name in the Requestor details on the create page must be populated"},{"name":"correspondentSurname","message":"Last name in the Requestor details on the create page must be populated"},{"name":"document","message":"A document with a Response document type must be uploaded","expression":"case.hasCaseDocument(\'Response\') === true"},{"name":"exemptions","message":"Exemptions in the outcome section must be populated","expression":"notEmpty(case.exemptions) or case.markupDecision !== \'Information withheld in full\' and case.markupDecision !== \'Information released in part\'"}]}';
                                    bpm_package.children[i].save();
                                }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToQAReviewGateway" sourceRef="QAReview" targetRef="QAReviewGateway"/>
        <exclusiveGateway id="QAReviewGateway"/>
        <sequenceFlow id="RejectQAReviewToDraftResponse" sourceRef="QAReviewGateway" targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToSCSApproval" sourceRef="QAReviewGateway" targetRef="SCSApproval">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForSCSApproval')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="SCSApproval" name="SCS Approval" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: SCS Approval");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Approvals';
                                bpm_package.children[i].properties['cts:caseTask'] = 'SCS approval';
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "SendForPressOfficeReview","manualAllocate": false,"allocateHeader": "Allocate for Press Office review","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Reallocate for drafter","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: SCS Approval");
                            var approved = (task.getVariableLocal('cts_draftResponse') == 'SendForPressOfficeReview');
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Press Office Review");
                                execution.setVariable('bpm_outcome', 'SendForPressOfficeReview');
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Draft Response");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value":"Reallocate","manualAllocate":true,"allocateHeader":"Reallocate","colour":"green"},{"label":"Submit","value":"SendForQA","manualAllocate":true,"allocateHeader":"Allocate for QA review","colour":"green"},{"label":"Return","value":"Reject","manualAllocate":true,"allocateHeader":"Reject","colour":"red"}],"mandatoryFields":[{"name":"hoCaseOfficer","message":"HO case officer is required"},{"name":"answeringMinister","message":"Sign off Minister must be populated when ministerial sign off is required","expression":"notBlank(case.answeringMinister) or form.foiMinisterSignOff !== 1"},{"name":"pitLetterSentDate","message":"The date of the PIT extension letter must be populated","expression":"notBlank(case.pitLetterSentDate) or form.pitExtension !== 1"},{"name":"pitQualifiedExemptions","message":"An appropriate PIT exemption must be selected","expression":"notEmpty(case.pitQualifiedExemptions) or form.pitExtension !== 1"},{"name":"correspondentForename","message":"First name in the Requestor details on the create page must be populated"},{"name":"correspondentSurname","message":"Last name in the Requestor details on the create page must be populated"},{"name":"document","message":"A document with a Response document type must be uploaded","expression":"case.hasCaseDocument(\'Response\') === true"},{"name":"exemptions","message":"Exemptions in the outcome section must be populated","expression":"notEmpty(case.exemptions) or case.markupDecision !== \'Information withheld in full\' and case.markupDecision !== \'Information released in part\'"}]}';
                                    bpm_package.children[i].save();
                                 }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToSCSApprovalGateway" sourceRef="SCSApproval" targetRef="SCSApprovalGateway"/>
        <exclusiveGateway id="SCSApprovalGateway"/>
        <sequenceFlow id="RejectSCSApprovalToDraftResponse" sourceRef="SCSApprovalGateway" targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToPressOfficeReview" sourceRef="SCSApprovalGateway" targetRef="PressOfficeReview">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForPressOfficeReview')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="PressOfficeReview" name="Press Office Review" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Press Office Review");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                logger.log("Draft node:" + bpm_package.children[i].nodeRef);
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Approvals';
                                bpm_package.children[i].properties['cts:caseTask'] = 'Press Office review';
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_PRESS_OFFICE';
                                bpm_package.children[i].properties['cts:assignedTeam'] = 'GROUP_PRESS_OFFICE_PRESS_OFFICE';
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Noted","value": "PressOfficeNoted","manualAllocate": false,"allocateHeader": "Allocate","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Rellocate for drafting","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Press Office Review");
                            var noted = (task.getVariableLocal('cts_draftResponse') == 'PressOfficeNoted');
                            if(noted){
                                var notedTransition = "SendForDispatch";
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    if (bpm_package.children[i].properties['cts:answeringMinister']) {
                                        logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: SPADS Approval");
                                        notedTransition = "SendForSpadsApproval";
                                    } else {
                                        logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Dispatch");
                                    }
                                }
                                execution.setVariable('bpm_outcome', notedTransition);
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].save();
                                }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToPressOfficeReviewGateway" sourceRef="PressOfficeReview"
                      targetRef="PressOfficeReviewGateway"/>
        <exclusiveGateway id="PressOfficeReviewGateway"/>
        <sequenceFlow id="RejectPressOfficeReviewToDraftResponse" name="Reject" sourceRef="PressOfficeReviewGateway"
                      targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendPressOfficeReviewToDispatch" name="No Sign-Off Minister required"
                      sourceRef="PressOfficeReviewGateway" targetRef="Dispatch">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForDispatch')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToSpadsApproval" sourceRef="PressOfficeReviewGateway" targetRef="SpadsApproval">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForSpadsApproval')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="SpadsApproval" name="Spads Approval" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: SPADS Approval");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Approvals';
                                bpm_package.children[i].properties['cts:caseTask'] = 'SpAds approval';
                                var assignedTeam = bpm_package.children[i].properties['cts:answeringMinister'];
                                logger.log("Assigned team : " + assignedTeam);
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_PRIVATE_OFFICE';
                                bpm_package.children[i].properties['cts:assignedTeam'] = assignedTeam;
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "SendForMinisterSignOff","manualAllocate": false,"allocateHeader": "Allocate for Minister sign-off","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Reallocate for drafter","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: SPADS Approval");
                            var approved = (task.getVariableLocal('cts_draftResponse') == 'SendForMinisterSignOff');
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Minister Sign Off");
                                execution.setVariable('bpm_outcome', 'SendForMinisterSignOff');
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    logger.log("Returning node to Draft response:" + bpm_package.children[i].nodeRef);
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].save();
                                }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToSpadsApprovalGateway" sourceRef="SpadsApproval" targetRef="SpadsApprovalGateway"/>
        <exclusiveGateway id="SpadsApprovalGateway"/>
        <sequenceFlow id="RejectSpadsApprovalToDraftResponse" sourceRef="SpadsApprovalGateway"
                      targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToMinisterSignOff" sourceRef="SpadsApprovalGateway" targetRef="MinisterSignOff">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForMinisterSignOff')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="MinisterSignOff" name="Ministerial Review" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Minister Sign Off");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Obtain sign-off';
                                bpm_package.children[i].properties['cts:caseTask'] = 'FOI Minister sign-off';
                                var assignedTeam = bpm_package.children[i].properties['cts:answeringMinister'];
                                logger.log("Assigned team : " + assignedTeam);
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_PRIVATE_OFFICE';
                                bpm_package.children[i].properties['cts:assignedTeam'] = assignedTeam;
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "SendForDispatch","manualAllocate": false,"allocateHeader": "Allocate for dispatch","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Reallocate for drafter","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Minister Sign Off");
                            var approved = (task.getVariableLocal('cts_draftResponse') == 'SendForDispatch');
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Dispatch");
                                execution.setVariable('bpm_outcome', 'SendForDispatch');
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    logger.log("Returning node to Draft response:" + bpm_package.children[i].nodeRef);
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].save();
                                }
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToMinisterSignOffGateway" sourceRef="MinisterSignOff" targetRef="MinisterSignOffGateway"/>
        <exclusiveGateway id="MinisterSignOffGateway"/>
        <sequenceFlow id="RejectMinisterSignOffToDraftResponse" sourceRef="MinisterSignOffGateway"
                      targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToDispatch" sourceRef="MinisterSignOffGateway" targetRef="Dispatch">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForDispatch')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="Dispatch" name="Dispatch" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("Sending node to Press Office review;");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                logger.log("Draft node:" + bpm_package.children[i].nodeRef);
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Dispatch';
                                bpm_package.children[i].properties['cts:caseTask'] = 'Dispatch response';
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Dispatch","value": "Next","manualAllocate": false, "allocateHeader": "","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Return case","colour": "red"}]}';
                                bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string>admin</activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            if (task.getVariableLocal('cts_draftResponse') != 'Reject') {
                                execution.setVariable('bpm_outcome', 'Complete');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Completed';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'None';
                                    bpm_package.children[i].properties['cts:assignedUser'] = null;
                                    bpm_package.children[i].properties['cts:assignedTeam'] = null;
                                    bpm_package.children[i].properties['cts:assignedUnit'] = null;
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = null;
                                    bpm_package.children[i].save();
                                }
                            } else {
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].save();
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToDispatchGateway" sourceRef="Dispatch" targetRef="DispatchGateway"/>
        <exclusiveGateway id="DispatchGateway"/>
        <sequenceFlow id="ReturnDispatchToDraftResponse" sourceRef="DispatchGateway" targetRef="DraftResponse">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendDispatchToComplete" sourceRef="DispatchGateway" targetRef="endevent1">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Complete')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="NRR" name="No Response Required" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: No Response Required");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'NFA';
                                bpm_package.children[i].properties['cts:caseTask'] = 'QA';
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_FOI';
                                bpm_package.children[i].properties['cts:assignedTeam'] = 'GROUP_FOI_INFORMATION_RIGHTS_TEAM';
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "ApproveNRR","manualAllocate": false, "allocateHeader": "","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Return case","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var approved = (task.getVariableLocal('cts_draftResponse') == 'ApproveNRR');
                            if(approved){
                                execution.setVariable('bpm_outcome', 'Complete');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Completed';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'None';
                                    bpm_package.children[i].properties['cts:assignedUser'] = null;
                                    bpm_package.children[i].properties['cts:assignedTeam'] = null;
                                    bpm_package.children[i].properties['cts:assignedUnit'] = null;
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = null;
                                    bpm_package.children[i].save();
                                }
                            } else {
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_create_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_create_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_create_user');
                                    bpm_package.children[i].save();
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToNRRGateway" sourceRef="NRR" targetRef="NRRGateway"/>
        <exclusiveGateway id="NRRGateway"/>
        <sequenceFlow id="ReturnNRRToCreateCase" name="Reject" sourceRef="NRRGateway" targetRef="CreateCase">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendNRRToComplete" sourceRef="NRRGateway" targetRef="endevent1">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Complete')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="OGD" name="Refer to DCU" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Other Government Department");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'OGD';
                                bpm_package.children[i].properties['cts:caseTask'] = 'Transfer';
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_FOI';
                                bpm_package.children[i].properties['cts:assignedTeam'] = 'GROUP_FOI_INFORMATION_RIGHTS_TEAM';
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "ApproveNRR","manualAllocate": false, "allocateHeader": "","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Return case","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var approved = (task.getVariableLocal('cts_draftResponse') == 'ApproveNRR');
                            if(approved){
                                execution.setVariable('bpm_outcome', 'Complete');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Completed';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'None';
                                    bpm_package.children[i].properties['cts:assignedUser'] = null;
                                    bpm_package.children[i].properties['cts:assignedTeam'] = null;
                                    bpm_package.children[i].properties['cts:assignedUnit'] = null;
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = null;
                                    bpm_package.children[i].save();
                                }
                            } else {
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_create_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_create_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_create_user');
                                    bpm_package.children[i].save();
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToOGDGateway" sourceRef="OGD" targetRef="OGDGateway"/>
        <exclusiveGateway id="OGDGateway"/>
        <sequenceFlow id="ReturnOGDToCreateCase" name="Reject" sourceRef="OGDGateway" targetRef="CreateCase">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendOGDToComplete" sourceRef="OGDGateway" targetRef="endevent1">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Complete')}]]></conditionExpression>
        </sequenceFlow>
        <endEvent id="endevent1"/>
    </process>
    <bpmndi:BPMNDiagram id="BPMNDiagram_1">
        <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="FOI_Standard">
            <bpmndi:BPMNShape id="FOI_di" bpmnElement="FOI">
                <omgdc:Bounds x="-1" y="-141" width="1884" height="1244"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="startevent1">
                <omgdc:Bounds x="133" y="81" width="36" height="36"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="139" y="117" width="24" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="start_di" bpmnElement="start">
                <omgdi:waypoint xsi:type="omgdc:Point" x="169" y="99"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="231" y="99"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="155" y="78" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="CreateCaseGateway_di" bpmnElement="CreateCaseGateway" isMarkerVisible="true">
                <omgdc:Bounds x="411" y="74" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="391" y="127" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToCreateCaseGateway_di" bpmnElement="SendToCreateCaseGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="331" y="99"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="411" y="99"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="326" y="78" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToDraftResponse_di" bpmnElement="SendToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="124"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="169"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="169"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="214"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="406" y="163" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="DraftResponseGateway_di" bpmnElement="DraftResponseGateway" isMarkerVisible="true">
                <omgdc:Bounds x="411" y="369" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="391" y="422" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToDraftResponseGateway_di" bpmnElement="SendToDraftResponseGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="294"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="332"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="332"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="369"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="406" y="326" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="RejectDraftResponseToCreateCase_di" bpmnElement="RejectDraftResponseToCreateCase">
                <omgdi:waypoint xsi:type="omgdc:Point" x="411" y="394"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="281" y="394"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="281" y="139"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="330" y="373" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToQAReview_di" bpmnElement="SendToQAReview">
                <omgdi:waypoint xsi:type="omgdc:Point" x="461" y="394"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="543" y="394"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="457" y="373" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="QAReviewGateway_di" bpmnElement="QAReviewGateway" isMarkerVisible="true">
                <omgdc:Bounds x="692" y="369" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="672" y="422" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToQAReviewGateway_di" bpmnElement="SendToQAReviewGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="643" y="394"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="692" y="394"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="623" y="373" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="RejectQAReviewToDraftResponse_di" bpmnElement="RejectQAReviewToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="717" y="369"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="717" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="486" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="687" y="305" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToSCSApproval_di" bpmnElement="SendToSCSApproval">
                <omgdi:waypoint xsi:type="omgdc:Point" x="717" y="419"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="717" y="505"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="764" y="505"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="687" y="456" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="SCSApprovalGateway_di" bpmnElement="SCSApprovalGateway" isMarkerVisible="true">
                <omgdc:Bounds x="901" y="480" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="881" y="533" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToSCSApprovalGateway_di" bpmnElement="SendToSCSApprovalGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="864" y="505"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="901" y="505"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="838" y="484" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToPressOfficeReview_di" bpmnElement="SendToPressOfficeReview">
                <omgdi:waypoint xsi:type="omgdc:Point" x="926" y="530"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="926" y="667"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="968" y="667"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="896" y="592" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="PressOfficeReviewGateway_di" bpmnElement="PressOfficeReviewGateway"
                              isMarkerVisible="true">
                <omgdc:Bounds x="1103" y="642" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1083" y="695" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToPressOfficeReviewGateway_di" bpmnElement="SendToPressOfficeReviewGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1068" y="667"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1103" y="667"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1041" y="646" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToSpadsApproval_di" bpmnElement="SendToSpadsApproval">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1128" y="692"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1128" y="857"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1164" y="857"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1098" y="768" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="SpadsApprovalGateway_di" bpmnElement="SpadsApprovalGateway" isMarkerVisible="true">
                <omgdc:Bounds x="1301" y="832" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1281" y="885" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToSpadsApprovalGateway_di" bpmnElement="SendToSpadsApprovalGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1264" y="857"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1301" y="857"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1238" y="836" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToMinisterSignOff_di" bpmnElement="SendToMinisterSignOff">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1326" y="882"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1326" y="1030"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1365" y="1030"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1296" y="950" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="RejectSCSApprovalToDraftResponse_di" bpmnElement="RejectSCSApprovalToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="926" y="480"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="926" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="486" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="896" y="361" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="RejectPressOfficeReviewToDraftResponse_di"
                             bpmnElement="RejectPressOfficeReviewToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1128" y="642"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1128" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="486" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1108" y="225" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="RejectSpadsApprovalToDraftResponse_di"
                             bpmnElement="RejectSpadsApprovalToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1326" y="832"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1326" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="486" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1296" y="537" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="MinisterSignOffGateway_di" bpmnElement="MinisterSignOffGateway"
                              isMarkerVisible="true">
                <omgdc:Bounds x="1512" y="1005" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1492" y="1058" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToMinisterSignOffGateway_di" bpmnElement="SendToMinisterSignOffGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1465" y="1030"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1512" y="1030"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1444" y="1009" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="RejectMinisterSignOffToDraftResponse_di"
                             bpmnElement="RejectMinisterSignOffToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1537" y="1005"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1537" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="486" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1507" y="623" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToDispatch_di" bpmnElement="SendToDispatch">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1562" y="1030"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1702" y="1030"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1702" y="545"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1587" y="1008.5" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="endevent1_di" bpmnElement="endevent1">
                <omgdc:Bounds x="1795" y="236" width="36" height="36"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1768" y="275" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendToDispatchGateway_di" bpmnElement="SendToDispatchGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="465"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="279"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1673" y="365.5" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendCreateToNRR_di" bpmnElement="SendCreateToNRR">
                <omgdi:waypoint xsi:type="omgdc:Point" x="461" y="99"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1365" y="99"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="868" y="78" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendCreateToOGD_di" bpmnElement="SendCreateToOGD">
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="74"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="436" y="-50"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1365" y="-50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="406" y="5.5" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendPressOfficeReviewToDispatch_di" bpmnElement="SendPressOfficeReviewToDispatch">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1153" y="667"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1702" y="667"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="545"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1424.8709677419356" y="629" width="82" height="25"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToOGDGateway_di" bpmnElement="SendToOGDGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1465" y="-50"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1678" y="-49"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1526.5" y="-71" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToNRRGateway_di" bpmnElement="SendToNRRGateway">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1465" y="99"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1678" y="99"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1526.5" y="77.5" width="90" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="Lane_1uvq81a_di" bpmnElement="Lane_1uvq81a">
                <omgdc:Bounds x="29" y="-141" width="1854" height="328"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Lane_07xed15_di" bpmnElement="Lane_07xed15">
                <omgdc:Bounds x="29" y="187" width="1854" height="403"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Lane_1ipf9vq_di" bpmnElement="Lane_1ipf9vq">
                <omgdc:Bounds x="29" y="590" width="1854" height="178"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Lane_18t2e9g_di" bpmnElement="Lane_18t2e9g">
                <omgdc:Bounds x="29" y="768" width="1854" height="171"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Lane_0rz4nkq_di" bpmnElement="Lane_0rz4nkq">
                <omgdc:Bounds x="29" y="939" width="1854" height="164"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_1flyhb3_di" bpmnElement="CreateCase">
                <omgdc:Bounds x="231" y="59" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_179dej2_di" bpmnElement="DraftResponse">
                <omgdc:Bounds x="386" y="214" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_09t3ebv_di" bpmnElement="SCSApproval">
                <omgdc:Bounds x="764" y="465" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_0z7ezzi_di" bpmnElement="QAReview">
                <omgdc:Bounds x="543" y="354" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_1e1wn6e_di" bpmnElement="PressOfficeReview">
                <omgdc:Bounds x="968" y="627" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_1hgb3yk_di" bpmnElement="SpadsApproval">
                <omgdc:Bounds x="1164" y="817" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_0rsqkji_di" bpmnElement="MinisterSignOff">
                <omgdc:Bounds x="1365" y="990" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_0egeydt_di" bpmnElement="Dispatch">
                <omgdc:Bounds x="1653" y="465" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_0i3o5cy_di" bpmnElement="NRR">
                <omgdc:Bounds x="1365" y="59" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="UserTask_08jaa1w_di" bpmnElement="OGD">
                <omgdc:Bounds x="1365" y="-89" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="DispatchGateway_di" bpmnElement="DispatchGateway" isMarkerVisible="true">
                <omgdc:Bounds x="1678" y="229" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1703" y="282" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendDispatchToComplete_di" bpmnElement="SendDispatchToComplete">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1728" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1795" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1761.5" y="232.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnDispatchToDraftResponse_di" bpmnElement="ReturnDispatchToDraftResponse">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1678" y="254"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="486" y="254"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1082" y="232" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="NRRGateway_di" bpmnElement="NRRGateway" isMarkerVisible="true">
                <omgdc:Bounds x="1678" y="74" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1703" y="127" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendNRRToComplete_di" bpmnElement="SendNRRToComplete">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1728" y="99"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1813" y="99"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1813" y="236"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1770.5" y="77.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="OGDGateway_di" bpmnElement="OGDGateway" isMarkerVisible="true">
                <omgdc:Bounds x="1678" y="-74" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1703" y="-21" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendOGDToComplete_di" bpmnElement="SendOGDToComplete">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1728" y="-49"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1813" y="-49"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1813" y="236"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="1770.5" y="-70.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnNRRToCreateCase_di" bpmnElement="ReturnNRRToCreateCase">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="74"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="23"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="281" y="23"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="281" y="59"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="976" y="2" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnOGDToCreateCase_di" bpmnElement="ReturnOGDToCreateCase">
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="-74"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="1703" y="-109"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="281" y="-109"/>
                <omgdi:waypoint xsi:type="omgdc:Point" x="281" y="59"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="976" y="-130" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
        </bpmndi:BPMNPlane>
    </bpmndi:BPMNDiagram>
</definitions>
